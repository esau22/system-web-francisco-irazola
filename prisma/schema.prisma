// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Estudiante {
  id      Int      @id @default(autoincrement())
  nombre String
  apellido String
  email String @unique
  apoderado String
  estado Estado
  matricula Matricula?
} 
enum Estado {
  ACTIVO
  DESACTIVADO
}

model Matricula {
  id     Int  @id @default(autoincrement())
  estudiante   Estudiante @relation(fields: [estudianteId], references: [id])
  seccion   Seccion @relation(fields: [seccionId], references: [id])
  grado Grado @relation(fields: [gradoId], references: [id])
  estudianteId Int  @unique
  seccionId Int  @unique
  gradoId Int  @unique
}


model Seccion {
  id     Int  @id @default(autoincrement())
  descripcion String
  matricula Matricula?
}

model Grado {
  id     Int  @id @default(autoincrement())
  descripcion String
  matricula Matricula?
}

model Usuario {
  id Int @id @default(autoincrement())
  user String @unique
  email String @unique
  password String
  rol String
  
}



model Documento {
  id Int @id @default(autoincrement())
  asunto String
  remitente String
  email String @unique
  fecha DateTime @default(now())
  informacion Bytes
  estado_documento Estado_Documento
  area Area @relation(fields: [areaId], references: [id])
  areaId Int
  tipo Tipo_Documento @relation(fields: [tipoId], references: [id])
  tipoId Int
}

enum Estado_Documento {
  Finalizado
  Pendiente
}

model Area {
  id Int @id @default(autoincrement())
  nombre String @unique
  documento Documento[]
}

model Tipo_Documento {
  id Int @id @default(autoincrement())
  nombre String @unique
  documento Documento[]
}